// Generated by Dagger (https://google.github.io/dagger).
package com.gmail.superarch.inject;

import com.lst11.data.db.dao.WordDao;
import com.lst11.data.net.RestService;
import com.lst11.domain.repositories.WordsRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DomainModule_ProvideWordsRepositoryFactory implements Factory<WordsRepository> {
  private final DomainModule module;

  private final Provider<RestService> restServiceProvider;

  private final Provider<WordDao> wordDaoProvider;

  public DomainModule_ProvideWordsRepositoryFactory(
      DomainModule module,
      Provider<RestService> restServiceProvider,
      Provider<WordDao> wordDaoProvider) {
    this.module = module;
    this.restServiceProvider = restServiceProvider;
    this.wordDaoProvider = wordDaoProvider;
  }

  @Override
  public WordsRepository get() {
    return provideInstance(module, restServiceProvider, wordDaoProvider);
  }

  public static WordsRepository provideInstance(
      DomainModule module,
      Provider<RestService> restServiceProvider,
      Provider<WordDao> wordDaoProvider) {
    return proxyProvideWordsRepository(module, restServiceProvider.get(), wordDaoProvider.get());
  }

  public static DomainModule_ProvideWordsRepositoryFactory create(
      DomainModule module,
      Provider<RestService> restServiceProvider,
      Provider<WordDao> wordDaoProvider) {
    return new DomainModule_ProvideWordsRepositoryFactory(
        module, restServiceProvider, wordDaoProvider);
  }

  public static WordsRepository proxyProvideWordsRepository(
      DomainModule instance, RestService restService, WordDao wordDao) {
    return Preconditions.checkNotNull(
        instance.provideWordsRepository(restService, wordDao),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
