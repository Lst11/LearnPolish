// Generated by Dagger (https://google.github.io/dagger).
package com.gmail.superarch.inject;

import com.lst11.domain.executor.PostExecutorThread;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class DomainModule_ProvidePostExecutorThreadFactory
    implements Factory<PostExecutorThread> {
  private final DomainModule module;

  public DomainModule_ProvidePostExecutorThreadFactory(DomainModule module) {
    this.module = module;
  }

  @Override
  public PostExecutorThread get() {
    return provideInstance(module);
  }

  public static PostExecutorThread provideInstance(DomainModule module) {
    return proxyProvidePostExecutorThread(module);
  }

  public static DomainModule_ProvidePostExecutorThreadFactory create(DomainModule module) {
    return new DomainModule_ProvidePostExecutorThreadFactory(module);
  }

  public static PostExecutorThread proxyProvidePostExecutorThread(DomainModule instance) {
    return Preconditions.checkNotNull(
        instance.providePostExecutorThread(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
