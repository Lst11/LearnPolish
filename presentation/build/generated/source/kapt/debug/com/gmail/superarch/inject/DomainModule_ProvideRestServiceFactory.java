// Generated by Dagger (https://google.github.io/dagger).
package com.gmail.superarch.inject;

import com.lst11.data.net.RestService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DomainModule_ProvideRestServiceFactory implements Factory<RestService> {
  private final DomainModule module;

  private final Provider<String> serverUrlProvider;

  public DomainModule_ProvideRestServiceFactory(
      DomainModule module, Provider<String> serverUrlProvider) {
    this.module = module;
    this.serverUrlProvider = serverUrlProvider;
  }

  @Override
  public RestService get() {
    return provideInstance(module, serverUrlProvider);
  }

  public static RestService provideInstance(
      DomainModule module, Provider<String> serverUrlProvider) {
    return proxyProvideRestService(module, serverUrlProvider.get());
  }

  public static DomainModule_ProvideRestServiceFactory create(
      DomainModule module, Provider<String> serverUrlProvider) {
    return new DomainModule_ProvideRestServiceFactory(module, serverUrlProvider);
  }

  public static RestService proxyProvideRestService(DomainModule instance, String serverUrl) {
    return Preconditions.checkNotNull(
        instance.provideRestService(serverUrl),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
